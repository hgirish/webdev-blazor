@page "/"

@using Data.Models.Interfaces
@using Data.Models
@using Markdig

@inject IBlogApi _api

<ul>
    <Virtualize ItemsProvider="LoadPosts" Context="p">
        <article>
            <h2>@p.Title</h2>
            @((MarkupString)Markdig.Markdown.ToHtml(
                new string(p.Text.Take(100).ToArray()), pipeline
            ))
            <a href="/Post/@p.Id">Read more</a>
        </article>
    </Virtualize>
   
</ul>




@code {

    public int totalBlogPosts { get; set; }
    MarkdownPipeline pipeline;
    private async ValueTask<ItemsProviderResult<BlogPost>> LoadPosts(ItemsProviderRequest request)
    {
        if (totalBlogPosts == 0)
        {
            totalBlogPosts = await _api.GetBlogPostCountAsync();
        }
        var numBlogPosts = Math.Min(request.Count, totalBlogPosts - request.StartIndex);
        var blogPosts = await _api.GetBlogPostsAsync(numBlogPosts, request.StartIndex);
        return new ItemsProviderResult<BlogPost>(blogPosts, totalBlogPosts);
    }
    protected override Task OnInitializedAsync()
    {
        pipeline = new MarkdownPipelineBuilder()
        .UseEmojiAndSmiley()
        .Build();
        return base.OnInitializedAsync();
    }
}
